{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Inkeep Demo Lib","text":"<p>A tiny TypeScript library to prove end-to-end documentation ingestion for agents. These pages are static, anchor-rich, and include a sitemap\u2014perfect for Inkeep.</p>"},{"location":"#what-is-this","title":"What is this?","text":"<ul> <li>A minimal queue + hash utility with JSDoc.</li> <li>API docs are generated by TypeDoc to Markdown.</li> <li>Site is built by MkDocs Material and deployed to GitHub Pages.</li> </ul>"},{"location":"#why-this-structure-helps-inkeep","title":"Why this structure helps Inkeep","text":"<ul> <li>Clean HTML, predictable headings, stable anchors.</li> <li><code>sitemap.xml</code> via the sitemap plugin.</li> <li>No client-side rendering required to see content.</li> <li>Canonical URLs via <code>site_url</code>.</li> </ul>"},{"location":"#links","title":"Links","text":"<ul> <li>Quickstart</li> <li>Usage Patterns</li> <li>API Reference</li> </ul>"},{"location":"api/","title":"Overview","text":"<p>inkeep-demo-lib</p>"},{"location":"api/#inkeep-demo-lib","title":"Inkeep Demo Lib","text":"<p>A minimal TypeScript library + MkDocs site that Inkeep can crawl easily. - API docs generated via TypeDoc (markdown) to <code>docs/api</code> - Site built by MkDocs Material - Deployed to GitHub Pages via GitHub Actions</p>"},{"location":"api/#quick-use","title":"Quick use","text":"<p>1) Create a new GitHub repo named <code>inkeep-demo-lib</code> and push these files. 2) On your machine:    <code>bash    npm ci    npm run build:typedoc    pip install mkdocs-material    mkdocs serve</code> 3) Push to <code>main</code>; the included workflow will publish to:    <code>https://&lt;your-username&gt;.github.io/inkeep-demo-lib/</code></p>"},{"location":"api/#inkeep-config","title":"Inkeep config","text":"<ul> <li>Use General Web source with the above base URL.</li> <li>Allowlist <code>/</code>, <code>/guides/</code>, <code>/api/</code>.</li> <li>Deny <code>/search/</code>.</li> <li>Keep depth to 3\u20134.</li> <li>Re-crawl weekly (or on CI deploys).</li> </ul>"},{"location":"api/#notes","title":"Notes","text":"<ul> <li><code>robots.txt</code> is included and allows indexing.</li> <li><code>sitemap.xml</code> is emitted by MkDocs' sitemap plugin.</li> </ul>"},{"location":"api/globals/","title":"Globals","text":"<p>inkeep-demo-lib</p>"},{"location":"api/globals/#inkeep-demo-lib","title":"inkeep-demo-lib","text":"<p>inkeep-demo-lib A tiny utilities library used to demonstrate documentation crawling and indexing.</p>"},{"location":"api/globals/#classes","title":"Classes","text":"<ul> <li>TinyQueue</li> </ul>"},{"location":"api/globals/#functions","title":"Functions","text":"<ul> <li>hash</li> </ul>"},{"location":"api/classes/TinyQueue/","title":"Classes","text":"<p>inkeep-demo-lib</p> <p>inkeep-demo-lib / TinyQueue</p>"},{"location":"api/classes/TinyQueue/#class-tinyqueuet","title":"Class: TinyQueue\\&lt;T&gt;","text":"<p>Defined in: index.ts:11</p> <p>A resilient FIFO queue with time-based dequeue, used for demo purposes.</p>"},{"location":"api/classes/TinyQueue/#type-parameters","title":"Type Parameters","text":""},{"location":"api/classes/TinyQueue/#t","title":"T","text":"<p><code>T</code></p>"},{"location":"api/classes/TinyQueue/#constructors","title":"Constructors","text":""},{"location":"api/classes/TinyQueue/#constructor","title":"Constructor","text":"<p>new TinyQueue\\&lt;<code>T</code>&gt;(): <code>TinyQueue</code>\\&lt;<code>T</code>&gt;</p>"},{"location":"api/classes/TinyQueue/#returns","title":"Returns","text":"<p><code>TinyQueue</code>\\&lt;<code>T</code>&gt;</p>"},{"location":"api/classes/TinyQueue/#accessors","title":"Accessors","text":""},{"location":"api/classes/TinyQueue/#length","title":"length","text":""},{"location":"api/classes/TinyQueue/#get-signature","title":"Get Signature","text":"<p>get length(): <code>number</code></p> <p>Defined in: index.ts:43</p> <p>Number of items currently in the queue.</p>"},{"location":"api/classes/TinyQueue/#returns_1","title":"Returns","text":"<p><code>number</code></p>"},{"location":"api/classes/TinyQueue/#methods","title":"Methods","text":""},{"location":"api/classes/TinyQueue/#clear","title":"clear()","text":"<p>clear(): <code>void</code></p> <p>Defined in: index.ts:48</p> <p>Remove all items from the queue.</p>"},{"location":"api/classes/TinyQueue/#returns_2","title":"Returns","text":"<p><code>void</code></p>"},{"location":"api/classes/TinyQueue/#dequeue","title":"dequeue()","text":"<p>dequeue(<code>minMs</code>): <code>undefined</code> | <code>T</code></p> <p>Defined in: index.ts:34</p> <p>Dequeue the next value if it has been in the queue at least <code>minMs</code> milliseconds.</p>"},{"location":"api/classes/TinyQueue/#parameters","title":"Parameters","text":""},{"location":"api/classes/TinyQueue/#minms","title":"minMs","text":"<p><code>number</code> = <code>0</code></p> <p>Minimum age in milliseconds before dequeue is allowed.</p>"},{"location":"api/classes/TinyQueue/#returns_3","title":"Returns","text":"<p><code>undefined</code> | <code>T</code></p> <p>The dequeued value, or <code>undefined</code> if none is ready.</p>"},{"location":"api/classes/TinyQueue/#enqueue","title":"enqueue()","text":"<p>enqueue(<code>value</code>): <code>number</code></p> <p>Defined in: index.ts:23</p> <p>Enqueue a value.</p>"},{"location":"api/classes/TinyQueue/#parameters_1","title":"Parameters","text":""},{"location":"api/classes/TinyQueue/#value","title":"value","text":"<p><code>T</code></p> <p>Item to enqueue.</p>"},{"location":"api/classes/TinyQueue/#returns_4","title":"Returns","text":"<p><code>number</code></p> <p>New length of the queue.</p>"},{"location":"api/classes/TinyQueue/#example","title":"Example","text":"<pre><code>const q = new TinyQueue&lt;number&gt;();\nq.enqueue(42);\n</code></pre>"},{"location":"api/functions/hash/","title":"Functions","text":"<p>inkeep-demo-lib</p> <p>inkeep-demo-lib / hash</p>"},{"location":"api/functions/hash/#function-hash","title":"Function: hash()","text":"<p>hash(<code>s</code>): <code>number</code></p> <p>Defined in: index.ts:61</p> <p>Compute a stable hash (djb2) for strings.</p>"},{"location":"api/functions/hash/#parameters","title":"Parameters","text":""},{"location":"api/functions/hash/#s","title":"s","text":"<p><code>string</code></p> <p>Input string.</p>"},{"location":"api/functions/hash/#returns","title":"Returns","text":"<p><code>number</code></p> <p>32-bit integer hash.</p>"},{"location":"api/functions/hash/#example","title":"Example","text":"<pre><code>hash(\"hello\"); // 99162322\n</code></pre>"},{"location":"guides/quickstart/","title":"Quickstart","text":"<p>Install dependencies and generate API docs:</p> <pre><code>npm ci\nnpm run build:typedoc\n</code></pre> <p>Serve the site locally:</p> <pre><code>pip install mkdocs-material\nmkdocs serve\n</code></pre> <p>Deploy (CI will do this automatically on <code>main</code>):</p> <pre><code>mkdocs gh-deploy --force\n</code></pre>"},{"location":"guides/usage-patterns/","title":"Usage Patterns","text":""},{"location":"guides/usage-patterns/#tinyqueue","title":"TinyQueue","text":"<pre><code>import { TinyQueue } from \"inkeep-demo-lib\";\n\nconst q = new TinyQueue&lt;number&gt;();\nq.enqueue(1);\nsetTimeout(() =&gt; {\n  console.log(q.dequeue(500)); // waits at least 500ms before yielding 1\n}, 600);\n</code></pre>"},{"location":"guides/usage-patterns/#hash","title":"hash","text":"<pre><code>import { hash } from \"inkeep-demo-lib\";\nconsole.log(hash(\"hello\")); // 99162322\n</code></pre>"}]}